<#
.SYNOPSIS
    Clipboard Monitor v1.05 - Daily Logging with Session Preservation

.DESCRIPTION
    - Skips initial script content logging
    - Preserves all daily logs (appends new sessions)
    - Maintains all previous functionality
#>

Add-Type -AssemblyName System.Windows.Forms

# Configuration
$logDir = "$env:USERPROFILE\Documents\ClipboardLogs"
$logDate = Get-Date -Format "yyyy-MM-dd"
$sessionID = Get-Date -Format "HHmmss"
$logPath = "$logDir\clipboard_$logDate.txt"
$maxTextLength = 250

# Initialize logging directory
if (-not (Test-Path $logDir)) { 
    New-Item -ItemType Directory -Path $logDir | Out-Null
    Write-Host "Created log directory: $logDir" -ForegroundColor Yellow
}

# Only write session header if file doesn't exist or is empty
$writeHeader = (-not (Test-Path $logPath)) -or ((Get-Item $logPath).Length -eq 0)

if ($writeHeader) {
    "[=== DAILY CLIPBOARD LOG $logDate ===]" | Out-File -FilePath $logPath -Append
    "" | Out-File -FilePath $logPath -Append
}

# Write session header (always)
"[SESSION START $sessionID $(Get-Date -Format "HH:mm:ss")]" | Out-File -FilePath $logPath -Append
"PID: $PID | User: $env:USERNAME" | Out-File -FilePath $logPath -Append
"" | Out-File -FilePath $logPath -Append

# Main monitoring function
function Monitor-Clipboard {
    $lastContent = $null
    $firstRun = $true

    Write-Host "Clipboard Monitor v1.05 (Logging to $logPath)" -ForegroundColor Green
    Write-Host "Press ESC to stop..." -ForegroundColor DarkGray

    while ($true) {
        # Check for ESC key
        if ($Host.UI.RawUI.KeyAvailable -and ($Host.UI.RawUI.ReadKey("NoEcho,IncludeKeyDown").VirtualKeyCode -eq 27)) {
            Write-Host "`nStopping monitor..." -ForegroundColor Yellow
            "[SESSION END $sessionID $(Get-Date -Format "HH:mm:ss")]" | Out-File -FilePath $logPath -Append
            "" | Out-File -FilePath $logPath -Append
            break
        }

        # Get current clipboard data
        $currentData = [System.Windows.Forms.Clipboard]::GetDataObject()
        
        if ($currentData -ne $null) {
            if ($currentData.GetDataPresent([Windows.Forms.DataFormats]::Text)) {
                $currentContent = $currentData.GetData([Windows.Forms.DataFormats]::Text)
                
                # Skip initial script content if this is first run
                if ($firstRun) {
                    $firstRun = $false
                    $lastContent = $currentContent
                    continue
                }
                
                if ($currentContent -ne $lastContent) {
                    $contentType = if ($currentContent -match '^-?\d+\.?\d*$') { "NUMBER" } else { "TEXT" }
                    $displayContent = if ($currentContent.Length -gt $maxTextLength) {
                        $currentContent.Substring(0, $maxTextLength) + "...[TRUNCATED]"
                    } else { $currentContent }
                    
                    $logEntry = "[$(Get-Date -Format 'HH:mm:ss')] $contentType`: $displayContent"
                    
                    Write-Host $logEntry -ForegroundColor Cyan
                    $logEntry | Out-File -FilePath $logPath -Append
                    
                    $lastContent = $currentContent
                }
            }
            elseif (-not [string]::IsNullOrEmpty($lastContent)) {
                $logEntry = "[$(Get-Date -Format 'HH:mm:ss')] NON-TEXT: (Image/File/Other)"
                Write-Host $logEntry -ForegroundColor DarkGray
                $logEntry | Out-File -FilePath $logPath -Append
                $lastContent = $null
            }
        }
        elseif (-not [string]::IsNullOrEmpty($lastContent)) {
            $logEntry = "[$(Get-Date -Format 'HH:mm:ss')] EMPTY: (Clipboard cleared)"
            Write-Host $logEntry -ForegroundColor DarkGray
            $logEntry | Out-File -FilePath $logPath -Append
            $lastContent = $null
        }

        Start-Sleep -Milliseconds 300
    }
}

# Start monitoring
Monitor-Clipboard
Write-Host "Log file contains all sessions: $logPath" -ForegroundColor Green